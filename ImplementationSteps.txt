Solution Steps:
- Create the instance of the appropriate Grid
- Create the list of nodes
- Create a LinkedList Queue
- Create a wrapper around the queue that synchronizes the add and remove
-- Create a single thread that will work through the combinatin problem and generate a new combination and add it to queue
--- The thread will call generateCombinations
--- check if solutionFound is not true
---- if currentCombination.size() == k it will add it to the queue
--- in the looping structure, loop as long as !solutionFound 

-- Create 10 threads that will run in parallel, and as long as there is a combination of Nodes in the queue it will
--- remove the list representing the combination
--- iterate through the list of Node entries representing this combination, and with each click check if isSolved()
--- when it has finished if isSolved() is true, it will call printGrid, set the solutionFound marker to true and exit
--- otherwise, it will go back to check if there is something in the queue